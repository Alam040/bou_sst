{"version":3,"file":"static/js/187.3d0a29c4.chunk.js","mappings":"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","sources":["components/assets/AddStudent/ViewStudentOtherFromImport.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useAddStudent } from \"../../../Context/AddStudent\";\r\nimport useAxios from \"../../../api/Axios\";\r\nimport { MdClose } from \"react-icons/md\";\r\nimport styled from \"styled-components\";\r\nimport { TiTick } from \"react-icons/ti\";\r\n\r\nconst ViewStudentOtherFromImport = () => {\r\n  const axios = useAxios();\r\n  const students = useAddStudent();\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [array, setArray] = React.useState([]);\r\n  React.useEffect(() => {\r\n    setLoading(true);\r\n    const getStudents = async () => {\r\n      const { year, semester, courseName, term, center } = students.otherInfo;\r\n      const url = `/student/get?year=${year}&semester=${semester}&term=${term}&courseName=${courseName}&center=${center}`;\r\n      await axios\r\n        .get(url)\r\n        .then((res) => {\r\n          handleData(res.data);\r\n          setLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          students.handleError(err?.response?.data?.message);\r\n          setLoading(false);\r\n        });\r\n    };\r\n    if (array.length === 0) {\r\n      getStudents();\r\n    }\r\n    setLoading(false);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [axios, students]);\r\n\r\n  const handleData = (data) => {\r\n    const newData = data.map((dt) => {\r\n      console.log(dt);\r\n      const { year, semester, term, classId, courseName } = students.classInfo;\r\n      return [\r\n        \"default\",\r\n        dt.stuId,\r\n        `${dt.stuName}`,\r\n        classId,\r\n        year,\r\n        semester,\r\n        `${courseName}`,\r\n        term,\r\n      ];\r\n    });\r\n    setArray(newData);\r\n  };\r\n\r\n  return (\r\n    <Panel>\r\n      <Title>View Student Other From Import</Title>\r\n\r\n      {loading ? (\r\n        \"Loading...\"\r\n      ) : (\r\n        <React.Fragment>\r\n          <FlexRow>\r\n            <InputGroup>\r\n              <Label>Student ID:</Label>\r\n            </InputGroup>\r\n            <InputGroup>\r\n              <Label>Student Name:</Label>\r\n            </InputGroup>\r\n          </FlexRow>\r\n          {array.length > 0 &&\r\n            array.map((dt, idx) => {\r\n              console.log(dt);\r\n              return (\r\n                <FlexRow key={idx}>\r\n                  <InputGroup>\r\n                    <Input\r\n                      className=\"stuId\"\r\n                      type=\"Number\"\r\n                      defaultValue={dt[1]}\r\n                      placeholder=\"18052801001\"\r\n                      onChange={(e) => {\r\n                        students.array[idx][1] = e.target.value;\r\n                      }}\r\n                    />\r\n                  </InputGroup>\r\n                  <InputGroup>\r\n                    <Input\r\n                      name=\"name\"\r\n                      type=\"text\"\r\n                      defaultValue={dt[2]}\r\n                      placeholder=\"Mr. John\"\r\n                      onChange={(e) => {\r\n                        students.array[idx][2] = e.target.value;\r\n                      }}\r\n                    />\r\n                  </InputGroup>\r\n                  <ButtonGroup>\r\n                    <IconButton\r\n                      style={{ right: \"0\", background: \"red\" }}\r\n                      onClick={() => {\r\n                        // setLoading(true);\r\n                        students.handleDecrementArray(idx, array, setArray);\r\n                        // setTimeout(() => {\r\n                        //   setLoading(false);\r\n                        // }, 100);\r\n                      }}\r\n                    >\r\n                      <MdClose />\r\n                    </IconButton>\r\n                  </ButtonGroup>\r\n                </FlexRow>\r\n              );\r\n            })}\r\n          <p\r\n            style={{ fontWeight: \"600\", marginBottom: \"0\", marginTop: \"10px\" }}\r\n          >\r\n            Add New\r\n          </p>\r\n          <FlexRow>\r\n            <InputGroup>\r\n              <Input\r\n                id=\"stuId\"\r\n                className=\"stuId\"\r\n                type=\"Number\"\r\n                defaultValue={\"\"}\r\n                placeholder=\"18052801001\"\r\n                onChange={(e) => {}}\r\n              />\r\n            </InputGroup>\r\n            <InputGroup>\r\n              <Input\r\n                id=\"stuName\"\r\n                name=\"name\"\r\n                type=\"text\"\r\n                defaultValue={\"\"}\r\n                placeholder=\"Mr. John\"\r\n                onChange={(e) => {}}\r\n              />\r\n            </InputGroup>\r\n            <ButtonGroup>\r\n              <IconButton\r\n                style={{ right: \"0\", background: \"green\" }}\r\n                onClick={() => {\r\n                  const stuId = document.getElementById(\"stuId\").value;\r\n                  const stuName = document.getElementById(\"stuName\").value;\r\n                  if (stuId !== \"\" && stuName !== \"\") {\r\n                    // setLoading(true);\r\n                    const { year, semester, term, classId, courseName } =\r\n                      students.classInfo;\r\n                    setArray([\r\n                      ...array,\r\n                      [\r\n                        \"default\",\r\n                        stuId,\r\n                        `${stuName}`,\r\n                        classId,\r\n                        year,\r\n                        semester,\r\n                        `${courseName}`,\r\n                        term,\r\n                      ],\r\n                    ]);\r\n                    document.getElementById(\"stuId\").value = \"\";\r\n                    // document.getElementById(\"stuName\").value = \"\";\r\n                  }\r\n                }}\r\n              >\r\n                <TiTick />\r\n              </IconButton>\r\n            </ButtonGroup>\r\n            {/* {handleSubmitImportfromOther} */}\r\n          </FlexRow>\r\n          <ButtonPanel>\r\n            <MyButton\r\n              onClick={() => {\r\n                students.handleOtherImport(true);\r\n              }}\r\n            >\r\n              Back\r\n            </MyButton>\r\n\r\n            <MyButton\r\n              onClick={() => students.handleSubmitImportfromOther(array)}\r\n            >\r\n              Save\r\n            </MyButton>\r\n          </ButtonPanel>\r\n        </React.Fragment>\r\n      )}\r\n    </Panel>\r\n  );\r\n};\r\n\r\nexport default ViewStudentOtherFromImport;\r\n\r\nconst Panel = styled.div`\r\n  width: 650px;\r\n  margin-top: 0.5rem;\r\n  padding: 2rem;\r\n  border: 1px solid rgba(3, 3, 3, 0.3);\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media (max-width: 660px) {\r\n    width: 100%;\r\n  }\r\n`;\r\nconst Title = styled.h1`\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n  text-align: center;\r\n  margin-bottom: 1.5rem;\r\n`;\r\nconst InputGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 0.5rem;\r\n  &:nth-child(1) {\r\n    margin-right: 5px;\r\n  }\r\n`;\r\nconst FlexRow = styled.div`\r\n  display: grid;\r\n  grid-template-columns: auto auto 50px;\r\n  overflow: hidden;\r\n  width: 100%;\r\n\r\n  @media (max-width: 560px) {\r\n    grid-template-columns: auto;\r\n  }\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  align-items: start;\r\n  justify-content: flex-start;\r\n  padding-top: 5px;\r\n\r\n  @media (max-width: 560px) {\r\n    width: 100%;\r\n    justify-content: flex-end;\r\n    align-items: flex-start;\r\n    padding-top: 0;\r\n  }\r\n`;\r\n\r\nconst Label = styled.label`\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 0.4rem 0.5rem;\r\n  border-radius: 3px;\r\n  margin-bottom: 0.3rem;\r\n  border: 1px solid rgba(3, 3, 3, 0.5);\r\n\r\n  &::placeholder {\r\n    color: rgba(3, 3, 3, 0.5);\r\n  }\r\n`;\r\nconst IconButton = styled.div`\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50x;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 50px;\r\n  color: #fff;\r\n  font-size: 1.2rem;\r\n  cursor: pointer;\r\n  bottom: 15px;\r\n  &:nth-child(1) {\r\n    margin: 0 5px;\r\n  }\r\n`;\r\n\r\nconst MyButton = styled.button`\r\n  font-weight: 500;\r\n  background: rgba(230, 230, 230, 0.4);\r\n  margin: 0.5rem 0 0.5rem 0.5rem;\r\n  min-width: 100px;\r\n\r\n  &:nth-child(1) {\r\n    background: rgba(255, 71, 87, 1);\r\n    color: #fff;\r\n    border-radius: 3px;\r\n  }\r\n  &:nth-child(2) {\r\n    background: rgba(55, 66, 250, 1);\r\n    color: #fff;\r\n    border-radius: 3px;\r\n  }\r\n  &:hover {\r\n    &:nth-child(1) {\r\n      background: rgba(255, 100, 87, 1);\r\n    }\r\n    &:nth-child(2) {\r\n      background: rgba(55, 100, 250, 1);\r\n    }\r\n  }\r\n`;\r\n\r\nconst ButtonPanel = styled.div`\r\n  display: flex;\r\n  align-items: end;\r\n  justify-content: flex-end;\r\n  margin-top: 1rem;\r\n  width: 100%;\r\n`;\r\n"],"names":["axios","useAxios","students","useAddStudent","React","loading","setLoading","array","setArray","getStudents","otherInfo","year","semester","courseName","term","center","url","get","then","res","handleData","data","catch","err","handleError","response","message","length","newData","map","dt","console","log","classInfo","classId","stuId","stuName","Panel","Title","FlexRow","InputGroup","Label","idx","Input","className","type","defaultValue","placeholder","onChange","e","target","value","name","ButtonGroup","IconButton","style","right","background","onClick","handleDecrementArray","fontWeight","marginBottom","marginTop","id","document","getElementById","ButtonPanel","MyButton","handleOtherImport","handleSubmitImportfromOther","styled"],"sourceRoot":""}