{"version":3,"file":"static/js/413.4ab3cb25.chunk.js","mappings":"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","sources":["pages/Public/Registration.jsx"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { courseArray } from \"../../data/Subject\";\r\nimport { useRegistration } from \"../../Context/Registration\";\r\nimport { MdDeleteOutline } from \"react-icons/md\";\r\nimport { TbClick } from \"react-icons/tb\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Registration() {\r\n  const reg = useRegistration();\r\n  React.useEffect(() => {}, [reg]);\r\n\r\n  return (\r\n    <Section>\r\n      <Container>\r\n        {reg.isViewForm && <RegistrationForm />}\r\n        {reg.isViewCourse && <SubjectView />}\r\n      </Container>\r\n    </Section>\r\n  );\r\n}\r\n\r\nexport default Registration;\r\n\r\nconst RegistrationForm = () => {\r\n  const reg = useRegistration();\r\n  const navigate = useNavigate();\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    reg.setFormData({ ...reg.formData, [name]: value });\r\n  };\r\n  return (\r\n    <Form>\r\n      <Title>Registration Form</Title>\r\n      <Column>\r\n        <Label>Student ID</Label>\r\n        <Input\r\n          type=\"number\"\r\n          name=\"stuId\"\r\n          onChange={handleChange}\r\n          defaultChecked={reg.formData.stuId}\r\n          placeholder=\"18052801001\"\r\n        />\r\n      </Column>\r\n\r\n      <Column>\r\n        <Label>Name</Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"stuName\"\r\n          onChange={handleChange}\r\n          defaultChecked={reg.formData.stuName}\r\n          placeholder=\"Student Name\"\r\n        />\r\n      </Column>\r\n      <div style={{ display: \"grid\", gridTemplateColumns: \"60% 40%\" }}>\r\n        <Column>\r\n          <Label>Year & Semester</Label>\r\n          <Select\r\n            name=\"name\"\r\n            id=\"semester\"\r\n            placeholder=\"Select Year & Semester\"\r\n            onChange={(e) => {\r\n              const { value } = e.target;\r\n              const year = Math.ceil(value / 2);\r\n              const semester = value % 2 === 0 ? 2 : 1;\r\n              reg.setCourse(courseArray[year - 1][semester - 1]);\r\n              reg.setFormData({\r\n                ...reg.formData,\r\n                semester: semester,\r\n                year: year,\r\n                fullSemester: e.target.children[value].innerText,\r\n              });\r\n            }}\r\n          >\r\n            <option value=\"0\">Select Option</option>\r\n            <option value=\"1\">1st Year 1st Semester</option>\r\n            <option value=\"2\">1st Year 2nd Semester</option>\r\n            <option value=\"3\">2nd Year 1st Semester</option>\r\n            <option value=\"4\">2nd Year 2nd Semester</option>\r\n            <option value=\"5\">3rd Year 1st Semester</option>\r\n            <option value=\"6\">3rd Year 2nd Semester</option>\r\n            <option value=\"7\">4th Year 1st Semester</option>\r\n            <option value=\"8\">4th Year 2nd Semester</option>\r\n          </Select>\r\n        </Column>\r\n        <Column>\r\n          <Label>Credit Per Cost</Label>\r\n          <Input\r\n            type=\"number\"\r\n            name=\"cost\"\r\n            onChange={handleChange}\r\n            placeholder=\"700\"\r\n          />\r\n        </Column>\r\n      </div>\r\n      <Grid2>\r\n        <Column>\r\n          <Label>Session</Label>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"session\"\r\n            minLength=\"7\"\r\n            maxLength=\"9\"\r\n            onChange={handleChange}\r\n            placeholder=\"2018-2019\"\r\n          />\r\n        </Column>\r\n        <Column>\r\n          <Label>Term</Label>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"term\"\r\n            onChange={handleChange}\r\n            placeholder=\"201\"\r\n            min=\"231\"\r\n          />\r\n        </Column>\r\n      </Grid2>\r\n      <ButtonGroup>\r\n        <Button\r\n          onClick={() => navigate(-1)}\r\n          barient=\"rgba(255, 71, 87,1.0)\"\r\n          type=\"button\"\r\n        >\r\n          Back\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            reg.setIsViewCourse(true);\r\n            reg.setIsViewForm(false);\r\n            reg.setIsViewPrint(false);\r\n          }}\r\n          id=\"form\"\r\n          barient=\"rgba(55, 66, 250,1.0)\"\r\n          type=\"submit\"\r\n        >\r\n          Next\r\n        </Button>\r\n      </ButtonGroup>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst SubjectView = () => {\r\n  const reg = useRegistration();\r\n\r\n  return (\r\n    <Panel>\r\n      <Title style={{ marginBottom: \"2rem\" }}>Manage Course (Subject)</Title>\r\n      <Table>\r\n        <THead>\r\n          <TRow>\r\n            <TH>Course Code</TH>\r\n            <TH>Course Title</TH>\r\n            <TH>Credit</TH>\r\n            <TH>\r\n              <IconPanel>\r\n                <Icon>\r\n                  <TbClick />\r\n                </Icon>\r\n              </IconPanel>\r\n            </TH>\r\n          </TRow>\r\n        </THead>\r\n        <SubjectList />\r\n      </Table>\r\n      <ButtonGroup>\r\n        <Button\r\n          onClick={() => {\r\n            reg.setIsViewForm(true);\r\n            reg.setIsViewCourse(false);\r\n            reg.setIsViewPrint(false);\r\n          }}\r\n          barient=\"rgba(255, 71, 87,1.0)\"\r\n          type=\"button\"\r\n        >\r\n          Back\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            reg.setIsViewForm(false);\r\n            reg.setIsViewCourse(false);\r\n            reg.setIsViewPrint(true);\r\n          }}\r\n          id=\"form\"\r\n          barient=\"rgba(55, 66, 250,1.0)\"\r\n          type=\"submit\"\r\n        >\r\n          Next\r\n        </Button>\r\n      </ButtonGroup>\r\n    </Panel>\r\n  );\r\n};\r\n\r\nconst SubjectList = () => {\r\n  const reg = useRegistration();\r\n  const [loading, setLoading] = React.useState(true);\r\n\r\n  const handleDelete = React.useCallback(\r\n    (idx) => {\r\n      setLoading(false);\r\n      reg.course.splice(idx, 1);\r\n      reg.setCourse(reg.course);\r\n      setTimeout(() => {\r\n        setLoading(true);\r\n      }, 500);\r\n    },\r\n    [reg]\r\n  );\r\n\r\n  return (\r\n    <TBody>\r\n      {reg.course !== null && loading\r\n        ? reg.course.map((data, idx) => {\r\n            const { code, title, credit } = data;\r\n            return (\r\n              <TRow key={code}>\r\n                <TData>{code}</TData>\r\n                <TData>{title}</TData>\r\n                <TData style={{ textAlign: \"center\" }}>{credit}</TData>\r\n                <TData>\r\n                  <IconPanel>\r\n                    <Icon onClick={() => handleDelete(idx)}>\r\n                      <MdDeleteOutline />\r\n                    </Icon>\r\n                  </IconPanel>\r\n                </TData>\r\n              </TRow>\r\n            );\r\n          })\r\n        : \"Loading...\"}\r\n    </TBody>\r\n  );\r\n};\r\n\r\nconst Section = styled.section`\r\n  min-height: 80vh;\r\n  margin-top: 70px;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Form = styled.div`\r\n  border: 1px solid rgba(3, 3, 3, 0.3);\r\n  width: 450px;\r\n  border-radius: 10px;\r\n  padding: 10px 1rem;\r\n  transition: all 0.3s ease-in-out;\r\n  margin-top: 20px;\r\n\r\n  @media (max-width: 550px) {\r\n    width: 100%;\r\n    border: none;\r\n    margin-top: 0;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-weight: 600;\r\n  font-size: 1.4rem;\r\n  text-align: center;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 5px;\r\n  border: 1px solid rgba(3, 3, 3, 0.3);\r\n  &::placeholder {\r\n    color: rgba(3, 3, 3, 0.3);\r\n  }\r\n`;\r\n\r\nconst Select = styled.select`\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 5px;\r\n  border: 1px solid rgba(3, 3, 3, 0.3);\r\n  &::placeholder {\r\n    color: rgba(3, 3, 3, 0.3);\r\n  }\r\n`;\r\n\r\nconst Label = styled.label`\r\n  font-weight: 600;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  min-width: 100px;\r\n  padding: 0.5rem 1rem;\r\n  font-size: 1.2rem;\r\n  margin: 0.5rem;\r\n  border-radius: 5px;\r\n  background-color: ${(props) =>\r\n    props.barient ? props.barient : \"rgba(3, 3, 3, 0.3)\"};\r\n  opacity: 0.8;\r\n  color: white;\r\n  font-weight: 600;\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n\r\n  @media (max-width: 550px) {\r\n    width: 100%;\r\n    margin: 0.5rem 0;\r\n  }\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-top: 1rem;\r\n\r\n  @media (max-width: 550px) {\r\n    flex-direction: column-reverse;\r\n    flex-wrap: wrap;\r\n  }\r\n`;\r\n\r\nconst Panel = styled.div`\r\n  width: 95%;\r\n  margin: 0.5rem auto;\r\n  overflow-x: scroll;\r\n`;\r\nconst Column = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  padding: 0.5rem;\r\n  margin-bottom: 0.5rem;\r\n  transition: all 0.3s ease-in-out;\r\n`;\r\n\r\nconst Grid2 = styled.div`\r\n  display: grid;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  flex-wrap: nowrap;\r\n  grid-template-columns: 50% 50%;\r\n`;\r\n\r\nconst Table = styled.table`\r\n  width: 100%;\r\n  font-size: 0.9rem;\r\n  font-weight: 500;\r\n  padding: 1px;\r\n  border-radius: 5px;\r\n  box-sizing: border-box;\r\n  border-color: gray;\r\n`;\r\n\r\nconst THead = styled.thead`\r\n  background: rgba(240, 240, 240, 1);\r\n`;\r\n\r\nconst TBody = styled.tbody``;\r\n\r\nconst TRow = styled.tr`\r\n  &:nth-child(2n + 2) {\r\n    background: rgba(240, 240, 240, 1);\r\n  }\r\n`;\r\n\r\nconst TData = styled.td`\r\n  border: 1px solid rgba(3, 3, 3, 0.3);\r\n  padding: 0.3rem 0.5rem;\r\n  &:nth-child(n + 4) {\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst TH = styled.th`\r\n  border: 1px solid rgba(3, 3, 3, 0.3);\r\n  padding: 0.3rem 0.5rem;\r\n  font-size: 0.8rem;\r\n  text-align: center;\r\n  font-weight: 600;\r\n  min-width: 75px;\r\n`;\r\n\r\nconst IconPanel = styled.div`\r\n  display: flex;\r\n  justify-items: stretch;\r\n  align-items: stretch;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Icon = styled.div`\r\n  width: 25px;\r\n  height: auto;\r\n  font-size: 1.1rem;\r\n  margin: 0 0.2rem;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n\r\n  &:hover {\r\n    background: rgba(230, 230, 230, 0.8);\r\n  }\r\n`;\r\n"],"names":["reg","useRegistration","React","Section","Container","isViewForm","RegistrationForm","isViewCourse","SubjectView","navigate","useNavigate","handleChange","e","target","name","value","setFormData","formData","Form","Title","Column","Label","Input","type","onChange","defaultChecked","stuId","placeholder","stuName","style","display","gridTemplateColumns","Select","id","year","Math","ceil","semester","setCourse","courseArray","fullSemester","children","innerText","Grid2","minLength","maxLength","min","ButtonGroup","Button","onClick","barient","setIsViewCourse","setIsViewForm","setIsViewPrint","Panel","marginBottom","Table","THead","TRow","TH","IconPanel","Icon","SubjectList","loading","setLoading","handleDelete","idx","course","splice","setTimeout","TBody","map","data","code","title","credit","TData","textAlign","styled","props"],"sourceRoot":""}