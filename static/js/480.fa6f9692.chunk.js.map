{"version":3,"file":"static/js/480.fa6f9692.chunk.js","mappings":"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","sources":["api/Axios.js","pages/Dashboard.jsx","utils/Toastify.js"],"sourcesContent":["import axios from \"axios\";\r\nimport useCookies from \"react-cookie/cjs/useCookies\";\r\n\r\nconst useAxios = () => {\r\n  const [cookies] = useCookies([\"log\"]);\r\n  axios.defaults.baseURL = process.env.REACT_APP_SERVER_API_URL;\r\n  //   axios.defaults.headers.post[\"Content-Type\"] = \"multipart/form-data\";\r\n  axios.defaults.params = {};\r\n\r\n  axios.defaults.headers.common[\"Authorization\"] = cookies.log || undefined;\r\n\r\n  return axios;\r\n};\r\n\r\nexport default useAxios;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport useAxios from \"../api/Axios\";\r\nimport {\r\n  createSearchParams,\r\n  useLocation,\r\n  useNavigate,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport { useAuth } from \"../Context/Auth\";\r\nimport { handleError } from \"../utils/Toastify\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setNavBarTitle } from \"../reduxjs/TitleSlice\";\r\nconst ClassInformation = React.lazy(() =>\r\n  import(\"../components/assets/ClassInformation\")\r\n);\r\n\r\nconst Dashboard = () => {\r\n  const axios = useAxios();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const auth = useAuth();\r\n  const dispatch = useDispatch();\r\n  const [classInfo, setClassInfo] = React.useState([]);\r\n\r\n  const param = useParams();\r\n\r\n  const [loading, setLoading] = React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n    setLoading(true);\r\n    auth.handleDashboard(true);\r\n    auth.handleSetTitle(\"Class Assesment Marks\");\r\n    dispatch(setNavBarTitle(\"Class Assesment Marks\"));\r\n    const getClass = async () => {\r\n      try {\r\n        const url = \"/class/all?id=\" + param.tid;\r\n        await axios\r\n          .get(url)\r\n          .then((res) => {\r\n            setClassInfo(res.data);\r\n          })\r\n          .catch((err) => {\r\n            handleError(err?.reaponse?.data?.message);\r\n          });\r\n      } catch (error) {\r\n        handleError(error?.reaponse?.data?.message);\r\n      }\r\n    };\r\n    getClass();\r\n    console.log(\"dashboard\");\r\n    setLoading(false);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleClickedClass = (id) => {\r\n    const path = location.pathname.replace(\"/dashboard\", \"/class/view\");\r\n    navigate({\r\n      pathname: path,\r\n      search: createSearchParams({\r\n        id: id,\r\n      }).toString(),\r\n    });\r\n  };\r\n  return (\r\n    <Section>\r\n      {loading ? (\r\n        \"Loading...\"\r\n      ) : (\r\n        <Container>\r\n          <ClassPanel>\r\n            {classInfo.length > 0 ? (\r\n              classInfo.map((data) => {\r\n                return (\r\n                  <Classes\r\n                    key={data.id}\r\n                    onClick={() => handleClickedClass(data.classId)}\r\n                  >\r\n                    <ClassInformation classInfo={data} />\r\n                  </Classes>\r\n                );\r\n              })\r\n            ) : (\r\n              <Panel>\r\n                <h1\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    fontSize: \"1.2rem\",\r\n                    marginBottom: \"2rem\",\r\n                  }}\r\n                >\r\n                  No Class Found\r\n                </h1>\r\n                <Button\r\n                  onClick={() => {\r\n                    const path = location.pathname.replace(\r\n                      \"/dashboard\",\r\n                      \"/class/create\"\r\n                    );\r\n                    navigate(path);\r\n                  }}\r\n                >\r\n                  Create\r\n                </Button>\r\n              </Panel>\r\n            )}\r\n          </ClassPanel>\r\n        </Container>\r\n      )}\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n\r\nconst Section = styled.section`\r\n  margin-top: 5px;\r\n  min-height: calc(100vh - 110px);\r\n  overflow-y: visible;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  padding: 0.5rem;\r\n`;\r\n\r\nconst Classes = styled.div`\r\n  cursor: pointer;\r\n  margin-bottom: 0.5rem;\r\n  width: 491px;\r\n  margin-right: 5px;\r\n  margin-bottom: 5px;\r\n\r\n  @media (max-width: 992px) {\r\n    width: 100%;\r\n    &:nth-child(2n + 1) {\r\n      margin-right: 0px;\r\n    }\r\n    &:nth-child(2n + 2) {\r\n      margin-left: 0px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Panel = styled.div`\r\n  height: 83.5vh;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst ClassPanel = styled.div`\r\n  display: flex;\r\n  grid-template-columns: auto auto auto;\r\n\r\n  @media (max-width: 992px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: 120px;\r\n  background: green;\r\n  color: #fff;\r\n  font-weight: 600;\r\n`;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport const handleSuccess = (msg) => {\r\n  toast.success(msg, {\r\n    position: \"top-right\",\r\n    autoClose: 5000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n  });\r\n};\r\n\r\nexport const handleError = (msg) => {\r\n  toast.error(msg, {\r\n    position: \"top-right\",\r\n    autoClose: 5000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n  });\r\n};\r\n"],"names":["useCookies","cookies","axios","process","log","undefined","ClassInformation","React","useAxios","navigate","useNavigate","location","useLocation","auth","useAuth","dispatch","useDispatch","classInfo","setClassInfo","param","useParams","loading","setLoading","handleDashboard","handleSetTitle","setNavBarTitle","getClass","url","tid","get","then","res","data","catch","err","handleError","reaponse","message","console","Section","Container","ClassPanel","length","map","Classes","onClick","id","path","pathname","replace","search","createSearchParams","toString","handleClickedClass","classId","Panel","style","textAlign","fontSize","marginBottom","Button","styled","handleSuccess","msg","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","theme"],"sourceRoot":""}