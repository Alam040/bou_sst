{"version":3,"file":"static/js/524.66d38d1f.chunk.js","mappings":"wNA0HA,UApHsB,WACpB,IAAMA,GAAWC,EAAAA,EAAAA,KACjB,EAAwBC,EAAAA,SAAe,CACrC,CACE,UACA,GACA,GACAC,OAAOH,EAASI,UAAUC,SAC1BL,EAASI,UAAUE,KACnBN,EAASI,UAAUG,SACnBP,EAASI,UAAUI,WACnBR,EAASI,UAAUK,QAErB,eAXKC,EAAI,KAAEC,EAAO,KAadC,EAAc,WAClBZ,EAASa,YAAW,GACpBF,EAAQ,CACN,CACE,UACA,GACA,GACAR,OAAOH,EAASI,UAAUC,SAC1BL,EAASI,UAAUE,KACnBN,EAASI,UAAUG,SACnBP,EAASI,UAAUI,WACnBR,EAASI,UAAUK,QAGvBT,EAASc,qBAAoB,EAC/B,EAMA,OAJAZ,EAAAA,WAAgB,WACdF,EAASa,YAAW,EACtB,GAAG,CAACb,EAAUU,EAAMA,EAAKK,OAAQf,EAASgB,gBAGxC,SAACC,EAAS,CAACC,KAAMlB,EAASgB,aAAa,UACrC,UAACG,EAAI,YACH,SAACC,EAAK,UAAC,6BACNpB,EAASqB,QACR,cAEA,UAACC,EAAU,WACRZ,EAAKa,KAAI,SAACC,EAAIC,GACb,OACE,UAAC,WAAc,YACb,eAAGC,MAAO,CAAEC,aAAc,EAAGC,WAAY,KAAM,UAAC,cAClCH,EAAM,MAEpB,UAACI,EAAO,YACN,UAACC,EAAU,YACT,SAACC,EAAK,UAAC,iBACP,SAACC,EAAK,CACJC,UAAU,QACVC,KAAK,SACLC,aAAcX,EAAG,GACjBY,YAAY,cACZC,SAAU,SAACC,GACT5B,EAAKe,GAAK,GAAKa,EAAEC,OAAOC,KAC1B,QAGJ,UAACV,EAAU,YACT,SAACC,EAAK,UAAC,mBACP,SAACC,EAAK,CACJS,KAAK,OACLP,KAAK,OACLC,aAAcX,EAAG,GACjBY,YAAY,WACZC,SAAU,SAACC,GACT5B,EAAKe,GAAK,GAAKa,EAAEC,OAAOC,KAC1B,QAGJ,UAACE,EAAW,YACV,SAACC,EAAU,CACTjB,MAAO,CAAEkB,MAAO,OAAQC,WAAY,SACpCC,QAAS,kBACP9C,EAAS+C,qBAAqBtB,EAAKf,EAAMC,EAAQ,EAClD,UAED,SAAC,MAAQ,OAED,IAARc,GAAaf,EAAKK,OAAS,KAC3B,SAAC4B,EAAU,CACTjB,MAAO,CAAEkB,MAAO,IAAKC,WAAY,OACjCC,QAAS,kBACP9C,EAASgD,qBAAqBvB,EAAKf,EAAMC,EAAQ,EAClD,UAED,SAAC,MAAO,cA7CGc,EAoDzB,KACA,UAACwB,EAAW,YACV,SAACC,EAAM,CAACJ,QAASlC,EAAY,SAAC,UAC9B,SAACsC,EAAM,CACLJ,QAAS,kBACP9C,EAASmD,uBAAuBzC,EAAME,EAAY,EACnD,SACF,qBASf,EAIA,IAAMK,EAAYmC,EAAAA,GAAAA,IAAU,yCACf,SAACC,GAAK,OAAqB,IAAfA,EAAMnC,KAAgB,QAAU,MAAM,IAGzDC,EAAOiC,EAAAA,GAAAA,IAAU,8GAOjBrB,EAAQqB,EAAAA,GAAAA,MAAY,8CAIpBpB,EAAQoB,EAAAA,GAAAA,MAAY,wMAWpBF,EAASE,EAAAA,GAAAA,OAAa,+dA6BtBH,EAAcG,EAAAA,GAAAA,IAAU,iHAOxBhC,EAAQgC,EAAAA,GAAAA,GAAS,iEAKjBT,EAAaS,EAAAA,GAAAA,IAAU,sSAiBvB9B,EAAa8B,EAAAA,GAAAA,IAAU,uRAevBtB,EAAasB,EAAAA,GAAAA,IAAU,gJASvBvB,EAAUuB,EAAAA,GAAAA,IAAU,iMAWpBV,EAAcU,EAAAA,GAAAA,IAAU,iQ","sources":["components/assets/AddStudent/AddIndividual.jsx"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { MdClose } from \"react-icons/md\";\r\nimport { HiPlusSm } from \"react-icons/hi\";\r\nimport { useAddStudent } from \"../../../Context/AddStudent\";\r\n\r\nconst AddIndividual = () => {\r\n  const students = useAddStudent();\r\n  const [data, setData] = React.useState([\r\n    [\r\n      \"default\",\r\n      \"\",\r\n      \"\",\r\n      Number(students.classInfo.classId),\r\n      students.classInfo.year,\r\n      students.classInfo.semester,\r\n      students.classInfo.courseName,\r\n      students.classInfo.term,\r\n    ],\r\n  ]);\r\n\r\n  const handleReset = () => {\r\n    students.setLoading(true);\r\n    setData([\r\n      [\r\n        \"default\",\r\n        \"\",\r\n        \"\",\r\n        Number(students.classInfo.classId),\r\n        students.classInfo.year,\r\n        students.classInfo.semester,\r\n        students.classInfo.courseName,\r\n        students.classInfo.term,\r\n      ],\r\n    ]);\r\n    students.handleSetIndividual(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    students.setLoading(false);\r\n  }, [students, data, data.length, students.isIndividual]);\r\n\r\n  return (\r\n    <Container open={students.isIndividual}>\r\n      <Form>\r\n        <Title>Add Student Individually</Title>\r\n        {students.loading ? (\r\n          \"Loading...\"\r\n        ) : (\r\n          <InputPanel>\r\n            {data.map((dt, idx) => {\r\n              return (\r\n                <React.Fragment key={idx}>\r\n                  <p style={{ marginBottom: 0, fontWeight: 500 }}>\r\n                    Index No: #{idx + 1}\r\n                  </p>\r\n                  <FlexRow>\r\n                    <InputGroup>\r\n                      <Label>Student ID:</Label>\r\n                      <Input\r\n                        className=\"stuId\"\r\n                        type=\"Number\"\r\n                        defaultValue={dt[1]}\r\n                        placeholder=\"18052801001\"\r\n                        onChange={(e) => {\r\n                          data[idx][1] = e.target.value;\r\n                        }}\r\n                      />\r\n                    </InputGroup>\r\n                    <InputGroup>\r\n                      <Label>Student Name:</Label>\r\n                      <Input\r\n                        name=\"name\"\r\n                        type=\"text\"\r\n                        defaultValue={dt[2]}\r\n                        placeholder=\"Mr. John\"\r\n                        onChange={(e) => {\r\n                          data[idx][2] = e.target.value;\r\n                        }}\r\n                      />\r\n                    </InputGroup>\r\n                    <ButtonGroup>\r\n                      <IconButton\r\n                        style={{ right: \"35px\", background: \"green\" }}\r\n                        onClick={() =>\r\n                          students.handleIncrementArray(idx, data, setData)\r\n                        }\r\n                      >\r\n                        <HiPlusSm />\r\n                      </IconButton>\r\n                      {(idx !== 0 || data.length > 1) && (\r\n                        <IconButton\r\n                          style={{ right: \"0\", background: \"red\" }}\r\n                          onClick={() =>\r\n                            students.handleDecrementArray(idx, data, setData)\r\n                          }\r\n                        >\r\n                          <MdClose />\r\n                        </IconButton>\r\n                      )}\r\n                    </ButtonGroup>\r\n                  </FlexRow>\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n            <ButtonPanel>\r\n              <Button onClick={handleReset}>Back</Button>\r\n              <Button\r\n                onClick={() =>\r\n                  students.handleSubmitIndividual(data, handleReset)\r\n                }\r\n              >\r\n                Submit\r\n              </Button>\r\n            </ButtonPanel>\r\n          </InputPanel>\r\n        )}\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddIndividual;\r\n\r\nconst Container = styled.div`\r\n  display: ${(props) => (props.open === true ? \"block\" : \"none\")};\r\n`;\r\n\r\nconst Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100vw;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 0.4rem 0.5rem;\r\n  border-radius: 3px;\r\n  margin-bottom: 0.3rem;\r\n  border: 1px solid rgba(3, 3, 3, 0.5);\r\n\r\n  &::placeholder {\r\n    color: rgba(3, 3, 3, 0.5);\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  font-weight: 500;\r\n  color: #fff;\r\n  border-radius: 5px;\r\n  min-width: 100px;\r\n  &:nth-child(1) {\r\n    background: rgba(235, 77, 75, 1);\r\n    margin-right: 5px;\r\n  }\r\n\r\n  &:nth-child(2) {\r\n    background: rgba(72, 52, 212, 1);\r\n  }\r\n\r\n  &:hover {\r\n    &:nth-child(1) {\r\n      background: rgba(235, 100, 75, 1);\r\n    }\r\n\r\n    &:nth-child(2) {\r\n      background: rgba(72, 100, 212, 1);\r\n    }\r\n  }\r\n\r\n  @media (max-width: 560px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst ButtonPanel = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin: 1rem 0;\r\n  padding: 0.5rem 0;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst IconButton = styled.div`\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50x;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 50px;\r\n  color: #fff;\r\n  font-size: 1.2rem;\r\n  cursor: pointer;\r\n  bottom: 18px;\r\n  &:nth-child(1) {\r\n    margin: 0 5px;\r\n  }\r\n`;\r\n\r\nconst InputPanel = styled.div`\r\n  border: 1px solid rgba(3, 3, 3, 0.3);\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 0.5rem;\r\n  padding: 0.5rem 1rem;\r\n  position: relative;\r\n  border-radius: 3px;\r\n  width: 550px;\r\n\r\n  @media (max-width: 560px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nconst InputGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 0.5rem;\r\n  &:nth-child(1) {\r\n    margin-right: 5px;\r\n  }\r\n`;\r\n\r\nconst FlexRow = styled.div`\r\n  display: grid;\r\n  grid-template-columns: auto auto 90px;\r\n  overflow: hidden;\r\n  width: 100%;\r\n\r\n  @media (max-width: 560px) {\r\n    grid-template-columns: auto;\r\n  }\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  padding-top: 7px;\r\n\r\n  @media (max-width: 560px) {\r\n    width: 100%;\r\n    justify-content: flex-end;\r\n    align-items: flex-start;\r\n    padding-top: 0;\r\n  }\r\n`;\r\n"],"names":["students","useAddStudent","React","Number","classInfo","classId","year","semester","courseName","term","data","setData","handleReset","setLoading","handleSetIndividual","length","isIndividual","Container","open","Form","Title","loading","InputPanel","map","dt","idx","style","marginBottom","fontWeight","FlexRow","InputGroup","Label","Input","className","type","defaultValue","placeholder","onChange","e","target","value","name","ButtonGroup","IconButton","right","background","onClick","handleIncrementArray","handleDecrementArray","ButtonPanel","Button","handleSubmitIndividual","styled","props"],"sourceRoot":""}