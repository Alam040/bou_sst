{"version":3,"file":"static/js/619.8bb362f2.chunk.js","mappings":"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","sources":["components/assets/MarksEntry/TableForMarks.jsx"],"sourcesContent":["import { Checkbox } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { CiViewList } from \"react-icons/ci\";\r\nimport { MdDeleteOutline, MdEditNote } from \"react-icons/md\";\r\nimport styled from \"styled-components\";\r\nimport useAxios from \"../../../api/Axios\";\r\nimport loadingImg from \"../../images/1_CsJ05WEGfunYMLGfsT2sXA.gif\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setViewData } from \"../../../reduxjs/ViewInfoSlice\";\r\n\r\nconst TableForMarks = ({ classInfo }) => {\r\n  const axios = useAxios();\r\n  const [student, setStudent] = React.useState([]);\r\n  const [loading, setLoading] = React.useState(true);\r\n  React.useEffect(() => {\r\n    getAllStudent();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [axios, classInfo]);\r\n\r\n  window.addEventListener(\"load\", () => {\r\n    getAllStudent();\r\n  });\r\n  const getAllStudent = async () => {\r\n    const url = \"/student/all?id=\" + classInfo[0].classId;\r\n    await axios.get(url).then((res) => {\r\n      setStudent(res.data);\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Loading>\r\n          <Image src={loadingImg} alt=\"Loading...\" />\r\n        </Loading>\r\n      ) : (\r\n        <React.Fragment>\r\n          <Table width=\"100%\">\r\n            <THead>\r\n              <TRow>\r\n                <TH rowSpan=\"2\">Select</TH>\r\n                <TH rowSpan=\"2\">Student ID</TH>\r\n                <TH rowSpan=\"2\">Student Name</TH>\r\n                <TH rowSpan=\"2\">\r\n                  Class Attendance ({classInfo[0].courseType === \"Lab\" ? 10 : 5}\r\n                  )\r\n                </TH>\r\n                {classInfo[0].courseType === \"Lab\" ? (\r\n                  <TH rowSpan=\"2\">Lab Performance(10)</TH>\r\n                ) : null}\r\n                <TH colSpan=\"4\">Assignment/Case Study (10)</TH>\r\n                <TH colSpan=\"3\">\r\n                  Quizzes/Class Test (\r\n                  {classInfo[0].courseType === \"Lab\" ? 10 : 15})\r\n                </TH>\r\n                <TH rowSpan=\"2\">\r\n                  Total ({classInfo[0].courseType === \"Lab\" ? 40 : 30})\r\n                </TH>\r\n                <TH rowSpan=\"2\">Action</TH>\r\n              </TRow>\r\n              <TRow>\r\n                <TH>Assign-1</TH>\r\n                <TH>Assign-2</TH>\r\n                <TH>Assign-3</TH>\r\n                <TH>Average</TH>\r\n                <TH>Test-1</TH>\r\n                <TH>Test-2</TH>\r\n                <TH>Best</TH>\r\n              </TRow>\r\n            </THead>\r\n            <TBody>\r\n              {student.length > 0 &&\r\n                student.map((data) => {\r\n                  return (\r\n                    <TableBodyRows\r\n                      key={data.id}\r\n                      data={data}\r\n                      classInfo={classInfo[0]}\r\n                    />\r\n                  );\r\n                })}\r\n            </TBody>\r\n          </Table>\r\n        </React.Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableForMarks;\r\n\r\nconst Table = styled.table`\r\n  width: 100%;\r\n  font-size: 0.9rem;\r\n  font-weight: 500;\r\n  padding: 1px;\r\n  border-radius: 5px;\r\n  box-sizing: border-box;\r\n  border-color: gray;\r\n`;\r\n\r\nconst THead = styled.thead``;\r\n\r\nconst TBody = styled.tbody``;\r\n\r\nconst TRow = styled.tr``;\r\n\r\nconst TData = styled.td`\r\n  border: 1px solid rgba(3, 3, 3, 0.3);\r\n  padding: 0.3rem 0.5rem;\r\n  &:nth-child(n + 4) {\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst TH = styled.th`\r\n  border: 1px solid rgba(3, 3, 3, 0.4);\r\n  padding: 0.3rem 0.5rem;\r\n  font-size: 0.8rem;\r\n  text-align: center;\r\n  font-weight: 600;\r\n  min-width: 75px;\r\n`;\r\n\r\nconst IconPanel = styled.div`\r\n  display: flex;\r\n  justify-items: stretch;\r\n  align-items: stretch;\r\n`;\r\n\r\nconst Icon = styled.div`\r\n  width: 25px;\r\n  height: auto;\r\n  font-size: 1.1rem;\r\n  margin: 0 0.2rem;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n\r\n  &:hover {\r\n    background: rgba(230, 230, 230, 0.8);\r\n  }\r\n`;\r\n\r\nconst Loading = styled.div`\r\n  width: 100%;\r\n  height: 55vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 200px;\r\n  height: auto;\r\n  border-radius: 5px;\r\n`;\r\n\r\nfunction TableBodyRows({ data, classInfo }) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <TRow key={data.id}>\r\n      <TData>\r\n        <Checkbox />\r\n      </TData>\r\n      <TData>{data.stuId}</TData>\r\n      <TData>{data.stuName}</TData>\r\n      <TData>{data.attendance}</TData>\r\n      {classInfo.courseType === \"Lab\" ? <TData>{data.labPerform}</TData> : null}\r\n      <TData>{data.assign1}</TData>\r\n      <TData>{data.assign2}</TData>\r\n      <TData>{data.assign3}</TData>\r\n      <TData>{data.average}</TData>\r\n      <TData>{data.test1}</TData>\r\n      <TData>{data.test2}</TData>\r\n      <TData>{data.best}</TData>\r\n      <TData>{data.total}</TData>\r\n      <TData>\r\n        <IconPanel>\r\n          <Icon\r\n            onClick={() => {\r\n              dispatch(setViewData({ id: data.id }));\r\n            }}\r\n          >\r\n            <CiViewList />\r\n          </Icon>\r\n          <Icon>\r\n            <MdEditNote />\r\n          </Icon>\r\n          <Icon>\r\n            <MdDeleteOutline />\r\n          </Icon>\r\n        </IconPanel>\r\n      </TData>\r\n    </TRow>\r\n  );\r\n}\r\n"],"names":["classInfo","axios","useAxios","React","student","setStudent","loading","setLoading","getAllStudent","window","addEventListener","url","classId","get","then","res","data","Loading","Image","src","loadingImg","alt","Table","width","THead","TRow","TH","rowSpan","courseType","colSpan","TBody","length","map","TableBodyRows","id","styled","TData","IconPanel","Icon","dispatch","useDispatch","Checkbox","stuId","stuName","attendance","labPerform","assign1","assign2","assign3","average","test1","test2","best","total","onClick","setViewData"],"sourceRoot":""}