{"version":3,"file":"static/js/780.041adb98.chunk.js","mappings":"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","sources":["components/assets/DialogBox/AlertDialog.jsx","components/assets/Edit/UpdateMarksIndividually.jsx","components/assets/TableForMarks.jsx","utils/Toastify.js"],"sourcesContent":["import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport { IoClose } from \"react-icons/io5\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function AlertDialog({\r\n  open,\r\n  setOpen,\r\n  title,\r\n  message,\r\n  onConfirm,\r\n}) {\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <Header>\r\n          <HeaderText>{title}</HeaderText>\r\n          <IconBox onClick={handleClose}>\r\n            <IoClose />\r\n          </IconBox>\r\n        </Header>\r\n        <DialogContent\r\n          style={{ display: \"flex\", flexWrap: \"nowrap\", alignItems: \"center\" }}\r\n        >\r\n          <Image\r\n            src={require(\"../../images/exclamation-mark.png\")}\r\n            alt=\"warning\"\r\n          />\r\n          <p style={{ marginBottom: \"0\" }}>{message}</p>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} autoFocus>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={onConfirm}>Delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Header = styled.div`\r\n  min-width: 300px;\r\n  height: 45px;\r\n  background: rgba(12, 36, 97, 1);\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  padding: 0.3rem 0.5rem;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst HeaderText = styled.p`\r\n  font-weight: 500;\r\n  font-size: 1.1rem;\r\n  color: #fff;\r\n  margin-bottom: 0px;\r\n  padding: 0.2rem 0.5rem;\r\n`;\r\n\r\nconst IconBox = styled.div`\r\n  width: 35px;\r\n  height: 25px;\r\n  border-radius: 3px;\r\n  outline: 2px solid #fff;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fff;\r\n  font-size: 1.5rem;\r\n\r\n  &:hover {\r\n    background: red;\r\n    outline: 2px solid red;\r\n  }\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 40px;\r\n  height: 40px;\r\n  margin-right: 10px;\r\n`;\r\n","import * as React from \"react\";\r\n// import Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport { IoClose } from \"react-icons/io5\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  handleWarning,\r\n} from \"../../../utils/Toastify\";\r\nimport useAxios from \"../../../api/Axios\";\r\n\r\nconst UpdateMarksIndivisually = ({\r\n  onReload,\r\n  open,\r\n  setOpen,\r\n  info,\r\n  courseType,\r\n}) => {\r\n  const axios = useAxios();\r\n  const [markInfo, setMarkInfo] = React.useState(null);\r\n  const [loading, setLoading] = React.useState(true);\r\n  React.useEffect(() => {\r\n    if (markInfo === null) {\r\n      setMarkInfo(info);\r\n    }\r\n    setLoading(false);\r\n  }, [info, markInfo, setMarkInfo]);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    let array = [];\r\n    for (const [key, value] of Object.entries(markInfo)) {\r\n      if (value === null || value === undefined || value === \"\") {\r\n        array.push(key);\r\n      }\r\n    }\r\n    if (array.length === 0) {\r\n      try {\r\n        const url = \"/marks/update/individual?id=\" + info.id;\r\n        axios\r\n          .patch(url, markInfo)\r\n          .then((res) => {\r\n            onReload();\r\n            if (res.status === 201) {\r\n              handleSuccess(res.data);\r\n            } else {\r\n              handleWarning(res.data);\r\n            }\r\n            setOpen(false);\r\n          })\r\n          .catch((err) => {\r\n            handleError(\r\n              err?.response?.data?.message || err?.response?.data?.sqlMessage\r\n            );\r\n          });\r\n      } catch (error) {\r\n        handleError(\r\n          error?.response?.data?.message || error?.response?.data?.sqlMessage\r\n        );\r\n      }\r\n    } else {\r\n      handleError(`' ${array.toString()} ' is required`);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e, label, val) => {\r\n    const name = e.target.name;\r\n    const value = Number(e.target.value);\r\n    let highMark = 10;\r\n    if (label === \"Attendance\") {\r\n      highMark = courseType === \"Lab\" ? 10 : 5;\r\n    } else if (label === \"Quizz/Test\") {\r\n      highMark = courseType === \"Lab\" ? 10 : 15;\r\n    }\r\n\r\n    if (!isNaN(e.target.value)) {\r\n      if (value >= 0 && value <= highMark) {\r\n        if (label === \"Assignment\") {\r\n          const average = Math.ceil((value + val) / 3);\r\n          const total =\r\n            Number(markInfo.attendance) +\r\n            Number(markInfo.labPerform) +\r\n            average +\r\n            Number(markInfo.best);\r\n          setMarkInfo({\r\n            ...markInfo,\r\n            [name]: value,\r\n            average: average,\r\n            total: total,\r\n          });\r\n          document.getElementById(\"average\").value = average;\r\n          document.getElementById(\"total\").value = total;\r\n        } else if (label === \"Quizz/Test\") {\r\n          const best = value > val ? value : val;\r\n          const total =\r\n            Number(markInfo.attendance) +\r\n            Number(markInfo.labPerform) +\r\n            best +\r\n            Number(markInfo.average);\r\n          setMarkInfo({ ...markInfo, [name]: value, best: best, total: total });\r\n          document.getElementById(\"best\").value = best;\r\n          document.getElementById(\"total\").value = total;\r\n        } else if (label === \"Lab Performance\") {\r\n          const total =\r\n            Number(markInfo.attendance) +\r\n            Number(markInfo.best) +\r\n            value +\r\n            Number(markInfo.average);\r\n          setMarkInfo({ ...markInfo, [name]: value, total: total });\r\n          document.getElementById(\"total\").value = total;\r\n        } else if (label === \"Attendance\") {\r\n          const total =\r\n            Number(markInfo.labPerform) +\r\n            Number(markInfo.best) +\r\n            value +\r\n            Number(markInfo.average);\r\n          setMarkInfo({ ...markInfo, [name]: value, total: total });\r\n          document.getElementById(\"total\").value = total;\r\n        } else {\r\n          setMarkInfo({ ...markInfo, [name]: value });\r\n        }\r\n      } else {\r\n        if (value < 0) {\r\n          document.getElementsByName(name)[0].value = 0;\r\n        } else {\r\n          document.getElementsByName(name)[0].value = highMark;\r\n        }\r\n        handleError(`'${label}' must be between 0 and ${highMark}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        {loading ? (\r\n          <Loading />\r\n        ) : (\r\n          <React.Fragment>\r\n            <Header>\r\n              <HeaderText>Update Marks</HeaderText>\r\n              <IconBox onClick={handleClose}>\r\n                <IoClose />\r\n              </IconBox>\r\n            </Header>\r\n            <DialogContent\r\n              style={{\r\n                display: \"block\",\r\n                padding: \"0 0.5rem\",\r\n              }}\r\n            >\r\n              <Form onSubmit={handleSubmit}>\r\n                <InputGroup>\r\n                  <Label>Student Information</Label>\r\n                  <Grid2>\r\n                    <div className=\"width100\">\r\n                      <SubLabel>Student ID</SubLabel>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"stuId\"\r\n                        defaultValue={markInfo.stuId}\r\n                        style={{\r\n                          borderTopLeftRadius: \"5px\",\r\n                          borderBottomLeftRadius: \"5px\",\r\n                        }}\r\n                        onChange={(e) =>\r\n                          setMarkInfo({\r\n                            ...markInfo,\r\n                            stuId: Number(e.target.value),\r\n                          })\r\n                        }\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div className=\"width100\">\r\n                      <SubLabel>Student Name</SubLabel>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"stuName\"\r\n                        defaultValue={markInfo.stuName}\r\n                        onChange={(e) =>\r\n                          setMarkInfo({\r\n                            ...markInfo,\r\n                            stuName: e.target.value,\r\n                          })\r\n                        }\r\n                        required\r\n                        style={{\r\n                          borderTopRightRadius: \"5px\",\r\n                          borderBottomRightRadius: \"5px\",\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </Grid2>\r\n                </InputGroup>\r\n                <InputGroup>\r\n                  <Label>Attendance</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"attendance\"\r\n                    defaultValue={markInfo.attendance}\r\n                    style={{ borderRadius: \"5px\" }}\r\n                    onChange={(e) => handleChange(e, \"Attendance\")}\r\n                    required\r\n                  />\r\n                </InputGroup>\r\n                {courseType === \"Lab\" && (\r\n                  <InputGroup>\r\n                    <Label>Lab Performace</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"labPerform\"\r\n                      defaultValue={markInfo.labPerform}\r\n                      style={{ borderRadius: \"5px\" }}\r\n                      onChange={(e) => handleChange(e, \"Lab Performance\")}\r\n                      required\r\n                    />\r\n                  </InputGroup>\r\n                )}\r\n                <InputGroup>\r\n                  <Label>Assignment</Label>\r\n                  <Grid>\r\n                    <div style={{ width: \"33%\" }}>\r\n                      <SubLabel>Assign-1</SubLabel>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"assign1\"\r\n                        defaultValue={markInfo.assign1}\r\n                        onChange={(e) =>\r\n                          handleChange(\r\n                            e,\r\n                            \"Assignment\",\r\n                            Number(markInfo.assign2) + Number(markInfo.assign3)\r\n                          )\r\n                        }\r\n                        required\r\n                        style={{\r\n                          borderTopLeftRadius: \"5px\",\r\n                          borderBottomLeftRadius: \"5px\",\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div style={{ width: \"33%\" }}>\r\n                      <SubLabel>Assign-2</SubLabel>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"assign2\"\r\n                        defaultValue={markInfo.assign2}\r\n                        onChange={(e) =>\r\n                          handleChange(\r\n                            e,\r\n                            \"Assignment\",\r\n                            Number(markInfo.assign1) + Number(markInfo.assign3)\r\n                          )\r\n                        }\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div style={{ width: \"33%\" }}>\r\n                      <SubLabel>Assign-3</SubLabel>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"assign3\"\r\n                        defaultValue={markInfo.assign3}\r\n                        onChange={(e) =>\r\n                          handleChange(\r\n                            e,\r\n                            \"Assignment\",\r\n                            Number(markInfo.assign2) + Number(markInfo.assign1)\r\n                          )\r\n                        }\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div style={{ width: \"80px\" }}>\r\n                      <SubLabel>Average</SubLabel>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"average\"\r\n                        id=\"average\"\r\n                        defaultValue={markInfo.average}\r\n                        disabled\r\n                        required\r\n                        style={{\r\n                          background: \"green\",\r\n                          color: \"#fff\",\r\n                          fontWeight: \"600\",\r\n                          fontSize: \"1.2rem\",\r\n                          padding: \"0.35rem 0.5rem 0.35rem 1rem\",\r\n                          borderTopRightRadius: \"5px\",\r\n                          borderBottomRightRadius: \"5px\",\r\n                          boxShadow: \"0 0 3px 2px rgba(3,3,3,0.3)\",\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </Grid>\r\n                </InputGroup>\r\n                <InputGroup>\r\n                  <Label>Quizz / Test</Label>\r\n                  <Grid>\r\n                    <div style={{ width: \"50%\" }}>\r\n                      <SubLabel>Quizz-1</SubLabel>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"test1\"\r\n                        defaultValue={markInfo.test1}\r\n                        onChange={(e) =>\r\n                          handleChange(e, \"Quizz/Test\", Number(markInfo.test2))\r\n                        }\r\n                        required\r\n                        style={{\r\n                          borderTopLeftRadius: \"5px\",\r\n                          borderBottomLeftRadius: \"5px\",\r\n                        }}\r\n                      />\r\n                    </div>\r\n\r\n                    <div style={{ width: \"50%\" }}>\r\n                      <SubLabel>Quizz-2</SubLabel>\r\n                      <Input\r\n                        name=\"test2\"\r\n                        type=\"number\"\r\n                        defaultValue={markInfo.test2}\r\n                        onChange={(e) =>\r\n                          handleChange(e, \"Quizz/Test\", Number(markInfo.test1))\r\n                        }\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div style={{ width: \"80px\" }}>\r\n                      <SubLabel>Best</SubLabel>\r\n                      <Input\r\n                        id=\"best\"\r\n                        name=\"best\"\r\n                        type=\"number\"\r\n                        style={{\r\n                          background: \"green\",\r\n                          color: \"#fff\",\r\n                          fontWeight: \"600\",\r\n                          fontSize: \"1.2rem\",\r\n                          padding: \"0.35rem 0.5rem 0.35rem 1rem\",\r\n                          borderTopRightRadius: \"5px\",\r\n                          borderBottomRightRadius: \"5px\",\r\n                          boxShadow: \"0 0 3px 2px rgba(3,3,3,0.3)\",\r\n                        }}\r\n                        defaultValue={markInfo.best}\r\n                        disabled\r\n                        required\r\n                      />\r\n                    </div>\r\n                  </Grid>\r\n                </InputGroup>\r\n                <InputGroup>\r\n                  <Label>Total C.A Marks</Label>\r\n                  <div style={{ width: \"150px\", marginLeft: \"auto\" }}>\r\n                    <SubLabel>Total CA Marks</SubLabel>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"total\"\r\n                      id=\"total\"\r\n                      defaultValue={markInfo.total}\r\n                      disabled\r\n                      style={{\r\n                        background: \"green\",\r\n                        color: \"#fff\",\r\n                        fontWeight: \"600\",\r\n                        fontSize: \"1.2rem\",\r\n                        padding: \"0.35rem 1rem\",\r\n                        borderRadius: \"5px\",\r\n                        boxShadow: \"0 0 2px 2px rgba(3,3,3,0.2)\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </InputGroup>\r\n\r\n                <ButtonGroup>\r\n                  <Button\r\n                    type=\"button\"\r\n                    onClick={() => setOpen(false)}\r\n                    style={{\r\n                      background: \"rgba(255, 56, 56,1.0)\",\r\n                      boxShadow: \"0 0 2px 2px rgba(3,3,3,0.2)\",\r\n                      fontSize: \"1.1rem\",\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    style={{\r\n                      background: \"rgba(72, 52, 212,1.0)\",\r\n                      boxShadow: \"0 0 2px 2px rgba(3,3,3,0.2)\",\r\n                      fontSize: \"1.1rem\",\r\n                    }}\r\n                  >\r\n                    Update\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </Form>\r\n            </DialogContent>\r\n          </React.Fragment>\r\n        )}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateMarksIndivisually;\r\n\r\nconst Header = styled.div`\r\n  min-width: 300px;\r\n  height: 45px;\r\n  background: rgba(12, 36, 97, 1);\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  padding: 0.3rem 0.5rem;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst HeaderText = styled.p`\r\n  font-weight: 500;\r\n  font-size: 1rem;\r\n  color: #fff;\r\n  margin-bottom: 0px;\r\n  padding: 0.2rem 0.5rem;\r\n`;\r\n\r\nconst IconBox = styled.div`\r\n  width: 40px;\r\n  height: 30px;\r\n  border-radius: 3px;\r\n  outline: 2px solid #fff;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fff;\r\n  font-size: 1.5rem;\r\n\r\n  &:hover {\r\n    background: red;\r\n    outline: 2px solid red;\r\n  }\r\n`;\r\n\r\nconst Form = styled.form`\r\n  width: 450px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 0.5rem 0;\r\n  background: #fff;\r\n  padding: 0.5rem 1rem;\r\n  overflow: hidden;\r\n\r\n  @media (max-width: 460px) {\r\n    width: 100%;\r\n    border: none;\r\n  }\r\n`;\r\n\r\nconst InputGroup = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  margin-top: 0.5rem;\r\n\r\n  display: table;\r\n  min-width: 10px;\r\n  border-radius: 8px;\r\n`;\r\nconst SubLabel = styled.label`\r\n  font-size: 0.7rem;\r\n  font-weight: 600;\r\n`;\r\nexport const Input = styled.input`\r\n  padding: 0.5rem 1rem;\r\n  border: 1px solid rgba(95, 39, 205, 01);\r\n  width: 100%;\r\n\r\n\r\n  &:,\r\n  &:focus {\r\n    outline: none;\r\n    border: 1px solid rgba(95, 39, 205, 0.5);\r\n  }\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin-top: 1rem;\r\n  width: 100%;\r\n  justify-content: flex-end;\r\n\r\n  @media (max-width: 560px) {\r\n    flex-direction: column-reverse;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  border: none;\r\n  padding: 0.5rem 1rem;\r\n  font-weight: 600;\r\n  min-width: 100px;\r\n  color: #fff;\r\n  font-size: 0.9rem;\r\n  margin: 0.5rem;\r\n  border-radius: 5px;\r\n  &:nth-last-child(1) {\r\n    margin-right: 0;\r\n  }\r\n\r\n  @media (max-width: 560px) {\r\n    padding: 0.5rem 1rem;\r\n    min-width: 95%;\r\n    margin: 0.5rem 0;\r\n    font-size: 1.1rem;\r\n  }\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n`;\r\nconst Grid2 = styled.div`\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  @media (max-width: 600px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nfunction Loading() {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        padding: \"1rem\",\r\n      }}\r\n    >\r\n      <span\r\n        style={{\r\n          padding: \"0.5rem 1rem\",\r\n          borderRadius: \"5px\",\r\n        }}\r\n      >\r\n        Loading...\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { MdDeleteOutline, MdEditNote } from \"react-icons/md\";\r\nimport styled from \"styled-components\";\r\nimport useAxios from \"../../api/Axios\";\r\nimport loadingImg from \"../images/1_CsJ05WEGfunYMLGfsT2sXA.gif\";\r\nimport { useMarksEntry } from \"../../Context/MarksEntry\";\r\nimport {\r\n  TiArrowSortedDown,\r\n  TiArrowSortedUp,\r\n  TiArrowUnsorted,\r\n} from \"react-icons/ti\";\r\nimport { useAddStudent } from \"../../Context/AddStudent\";\r\nimport UpdateMarksIndivisually from \"./Edit/UpdateMarksIndividually\";\r\nimport AlertDialog from \"./DialogBox/AlertDialog\";\r\nimport { handleError, handleSuccess } from \"../../utils/Toastify\";\r\n\r\nconst TableForMarks = ({ classInfo }) => {\r\n  const axios = useAxios();\r\n  const marks = useMarksEntry();\r\n  const [student, setStudent] = React.useState([]);\r\n  const [loading, setLoading] = React.useState(true);\r\n  React.useEffect(() => {\r\n    getAllStudent();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [axios, marks.classInfo, marks.search, marks.sortTable.order]);\r\n\r\n  window.addEventListener(\"load\", () => {\r\n    getAllStudent();\r\n  });\r\n  const getAllStudent = async () => {\r\n    const url = \"/student/all?id=\" + classInfo.classId;\r\n    await axios.get(url).then((res) => {\r\n      setStudent(res.data);\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Loading>\r\n          <Image src={loadingImg} alt=\"Loading...\" />\r\n        </Loading>\r\n      ) : (\r\n        <React.Fragment>\r\n          <Table width=\"100%\">\r\n            <THead>\r\n              <TableHead classInfo />\r\n            </THead>\r\n            <TBody>\r\n              {student.length > 0 ? (\r\n                student\r\n                  .sort((a, b) => {\r\n                    const order = marks.sortTable.order;\r\n                    const field = marks.sortTable.field;\r\n                    if (order === \"\") {\r\n                      return a;\r\n                    } else {\r\n                      if (order === \"asc\") {\r\n                        return a[field] > b[field] ? 1 : -1;\r\n                      } else {\r\n                        return a[field] > b[field] ? -1 : 1;\r\n                      }\r\n                    }\r\n                  })\r\n                  .filter((data) => {\r\n                    if (marks.search !== \"\") {\r\n                      if (\r\n                        Object.values(data)\r\n                          .toString()\r\n                          .toLocaleLowerCase()\r\n                          .includes(marks.search.toString().toLowerCase())\r\n                      ) {\r\n                        return data;\r\n                      }\r\n                      return null;\r\n                    } else {\r\n                      return data;\r\n                    }\r\n                  })\r\n                  .map((data) => {\r\n                    return (\r\n                      <TableBodyRows\r\n                        key={data.id}\r\n                        data={data}\r\n                        classInfo={classInfo}\r\n                      />\r\n                    );\r\n                  })\r\n              ) : (\r\n                <TableNoRecordFound />\r\n                // If table record not found then display no records found.\r\n              )}\r\n              {\r\n                student.length > 0 &&\r\n                  student.filter((data) => {\r\n                    if (marks.search !== \"\") {\r\n                      if (\r\n                        Object.values(data)\r\n                          .toString()\r\n                          .toLocaleLowerCase()\r\n                          .includes(marks.search.toString().toLowerCase())\r\n                      ) {\r\n                        return data;\r\n                      }\r\n                      return null;\r\n                    } else {\r\n                      return data;\r\n                    }\r\n                  }).length === 0 && <NoRecordFound /> // If Search record not found then display no records found.\r\n              }\r\n            </TBody>\r\n          </Table>\r\n        </React.Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableForMarks;\r\n\r\nfunction TableBodyRows({ data }) {\r\n  const marks = useMarksEntry();\r\n  const axios = useAxios();\r\n  const [isUpdatedMark, setIsUpdatedMark] = React.useState(false);\r\n  const [isDeleteMark, setDeleteMark] = React.useState(false);\r\n\r\n  const handleDeleteRecord = async () => {\r\n    try {\r\n      const url = \"/marks/delete?id=\" + data.id;\r\n      await axios\r\n        .delete(url)\r\n        .then((res) => {\r\n          marks.handleOpenBox(false);\r\n          handleSuccess(res.data);\r\n          setDeleteMark(false);\r\n        })\r\n        .catch((err) => {\r\n          handleError(err?.response?.data?.message);\r\n        });\r\n    } catch (error) {\r\n      handleError(error?.response?.data?.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TRow key={data.id}>\r\n      <TData>{data.stuId}</TData>\r\n      <TData style={{ whiteSpace: \"nowrap\" }}>{data.stuName}</TData>\r\n      <TData style={{ textAlign: \"center\" }}>{data.attendance}</TData>\r\n      {marks.classInfo.courseType === \"Lab\" ? (\r\n        <TData>{data.labPerform}</TData>\r\n      ) : null}\r\n      <TData>{data.assign1}</TData>\r\n      <TData>{data.assign2}</TData>\r\n      <TData>{data.assign3}</TData>\r\n      <TData>{data.average}</TData>\r\n      <TData>{data.test1}</TData>\r\n      <TData>{data.test2}</TData>\r\n      <TData>{data.best}</TData>\r\n      <TData>{data.total}</TData>\r\n      <TData>\r\n        <IconPanel>\r\n          <Icon onClick={() => setIsUpdatedMark(true)}>\r\n            <MdEditNote />\r\n          </Icon>\r\n          <Icon onClick={() => setDeleteMark(true)}>\r\n            <MdDeleteOutline />\r\n          </Icon>\r\n          {isUpdatedMark && (\r\n            <UpdateMarksIndivisually\r\n              open={isUpdatedMark}\r\n              setOpen={setIsUpdatedMark}\r\n              info={data}\r\n              onReload={() => marks.handleOpenBox(false)}\r\n              courseType={marks.classInfo.courseType}\r\n            />\r\n          )}\r\n          {isDeleteMark && (\r\n            <AlertDialog\r\n              open={isDeleteMark}\r\n              setOpen={setDeleteMark}\r\n              info={data}\r\n              message={`Are you sure you want to delete ID ${data.stuId}?`}\r\n              title=\"Delete Record\"\r\n              onConfirm={handleDeleteRecord}\r\n            />\r\n          )}\r\n        </IconPanel>\r\n      </TData>\r\n    </TRow>\r\n  );\r\n}\r\n\r\nconst TableHead = () => {\r\n  const marks = useMarksEntry();\r\n\r\n  const handleSortField = (field) => {\r\n    const order = marks.sortTable.order;\r\n    if (order === \"desc\") {\r\n      marks.handleSort({ order: \"asc\", field });\r\n    } else {\r\n      marks.handleSort({ order: \"desc\", field });\r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <TRow>\r\n        <TH\r\n          rowSpan=\"2\"\r\n          style={{ cursor: \"pointer\", width: \"100px\" }}\r\n          onClick={() => handleSortField(\"stuId\")}\r\n        >\r\n          Student ID <SortIcon field={\"stuId\"} />\r\n        </TH>\r\n        <TH rowSpan=\"2\">Student Name</TH>\r\n        <TH\r\n          rowSpan=\"2\"\r\n          style={{ cursor: \"pointer\", width: \"100px\" }}\r\n          onClick={() => handleSortField(\"attendance\")}\r\n        >\r\n          Class Attendance ({marks.classInfo.courseType === \"Lab\" ? 10 : 5}){\" \"}\r\n          <SortIcon field={\"attendance\"} />\r\n        </TH>\r\n        {/**\r\n         * Lab Performance\r\n         */}\r\n        {marks.classInfo.courseType === \"Lab\" ? (\r\n          <TH\r\n            rowSpan=\"2\"\r\n            style={{ cursor: \"pointer\", width: \"50px\" }}\r\n            onClick={() => handleSortField(\"labPerform\")}\r\n          >\r\n            Lab Performance(10) <SortIcon field={\"labPerform\"} />\r\n          </TH>\r\n        ) : null}\r\n        <TH colSpan=\"4\">Assignment/Case Study (10)</TH>\r\n        <TH colSpan=\"3\">\r\n          Quizzes/Class Test ({marks.classInfo.courseType === \"Lab\" ? 10 : 15})\r\n        </TH>\r\n        {/**\r\n         * Total CA Marks\r\n         */}\r\n        <TH\r\n          rowSpan=\"2\"\r\n          style={{ cursor: \"pointer\", whiteSpace: \"nowrap\" }}\r\n          onClick={() => handleSortField(\"total\")}\r\n        >\r\n          Total ({marks.classInfo.courseType === \"Lab\" ? 40 : 30}){\" \"}\r\n          <SortIcon field={\"total\"} />\r\n        </TH>\r\n        <TH rowSpan=\"2\">Action</TH>\r\n      </TRow>\r\n      <TRow style={{ background: \"#011f44\" }}>\r\n        <TH>Assign-1</TH>\r\n        <TH>Assign-2</TH>\r\n        <TH>Assign-3</TH>\r\n        {/**\r\n         * Average Assignment Marks\r\n         */}\r\n        <TH\r\n          style={{ cursor: \"pointer\", whiteSpace: \"nowrap\" }}\r\n          onClick={() => handleSortField(\"average\")}\r\n        >\r\n          Average <SortIcon field={\"average\"} />\r\n        </TH>\r\n        <TH>Test-1</TH>\r\n        <TH>Test-2</TH>\r\n        {/**\r\n         * Best of Quizz/Test Marks\r\n         */}\r\n        <TH\r\n          style={{ cursor: \"pointer\", whiteSpace: \"nowrap\" }}\r\n          onClick={() => handleSortField(\"best\")}\r\n        >\r\n          Best <SortIcon field={\"best\"} />\r\n        </TH>\r\n      </TRow>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst SortIcon = ({ field }) => {\r\n  const marks = useMarksEntry();\r\n  if (marks.sortTable.order !== \"\" && marks.sortTable.field === field) {\r\n    if (marks.sortTable.order === \"asc\") {\r\n      return <TiArrowSortedDown />;\r\n    } else return <TiArrowSortedUp />;\r\n  } else {\r\n    return <TiArrowUnsorted />;\r\n  }\r\n};\r\n\r\nfunction NoRecordFound() {\r\n  return (\r\n    <TRow>\r\n      <TData colSpan=\"13\">\r\n        <NoDataPanel>\r\n          <NoRecImage src={require(\"../images/no-data-found.png\")} />\r\n          <Text>No Record Found.</Text>\r\n          <Text>Please Search another Information or Try again later</Text>\r\n        </NoDataPanel>\r\n      </TData>\r\n    </TRow>\r\n  );\r\n}\r\nfunction TableNoRecordFound() {\r\n  const students = useAddStudent();\r\n  return (\r\n    <TRow>\r\n      <TData colSpan=\"13\">\r\n        <NoDataPanel>\r\n          <NoRecImage src={require(\"../images/empty_item.png\")} />\r\n          <Text>No Record Found.</Text>\r\n          <Text>Please Import Students First.</Text>\r\n          <ButtonPanel>\r\n            <Button onClick={() => students.handleOpen(true)}>\r\n              Import Student\r\n            </Button>\r\n            <Button onClick={() => students.handleDownload()}>\r\n              Sample File\r\n            </Button>\r\n          </ButtonPanel>\r\n        </NoDataPanel>\r\n      </TData>\r\n    </TRow>\r\n  );\r\n}\r\n\r\nconst Table = styled.table`\r\n  width: 100%;\r\n  font-size: 0.9rem;\r\n  font-weight: 500;\r\n  padding: 1px;\r\n  border-radius: 5px;\r\n  box-sizing: border-box;\r\n  border-color: gray;\r\n`;\r\n\r\nconst THead = styled.thead`\r\n  background: #011f44;\r\n  color: #fff;\r\n`;\r\n\r\nconst TBody = styled.tbody``;\r\n\r\nconst TRow = styled.tr`\r\n  &:nth-child(2n + 2) {\r\n    background: rgba(240, 240, 240, 1);\r\n  }\r\n`;\r\n\r\nconst TData = styled.td`\r\n  border: 1px solid rgba(3, 3, 3, 0.3);\r\n  padding: 0.3rem 0.5rem;\r\n  &:nth-child(n + 4) {\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst TH = styled.th`\r\n  border: 1px solid #fff;\r\n  padding: 0.3rem 0.5rem;\r\n  font-size: 0.8rem;\r\n  text-align: center;\r\n  font-weight: 600;\r\n  min-width: 75px;\r\n`;\r\n\r\nconst IconPanel = styled.div`\r\n  display: flex;\r\n  justify-items: stretch;\r\n  align-items: stretch;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Icon = styled.div`\r\n  width: 25px;\r\n  height: auto;\r\n  font-size: 1.1rem;\r\n  margin: 0 0.2rem;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n\r\n  &:hover {\r\n    background: rgba(230, 230, 230, 0.8);\r\n  }\r\n`;\r\n\r\nconst Loading = styled.div`\r\n  width: 100%;\r\n  height: 55vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 200px;\r\n  height: auto;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst NoDataPanel = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  padding: 1rem;\r\n`;\r\nconst NoRecImage = styled.img`\r\n  width: 150px;\r\n  height: auto;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: 150px;\r\n  border-radius: 5px;\r\n  color: #fff;\r\n  font-weight: 500;\r\n  background: rgba(0, 125, 0, 1);\r\n  margin: 0.2rem;\r\n  @media (max-width: 650px) {\r\n    min-width: 100%;\r\n  }\r\n`;\r\n\r\nconst ButtonPanel = styled.div`\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n\r\n  @media (max-width: 650px) {\r\n    flex-wrap: wrap;\r\n  }\r\n`;\r\n\r\nconst Text = styled.p`\r\n  width: 300px;\r\n  text-align: center;\r\n  &:nth-child(2) {\r\n    margin-bottom: 0;\r\n    font-size: 1.4rem;\r\n  }\r\n`;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport const handleSuccess = (msg) => {\r\n  toast.success(msg, {\r\n    position: \"top-right\",\r\n    autoClose: 5000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n  });\r\n};\r\n\r\nexport const handleError = (msg) => {\r\n  toast.error(msg, {\r\n    position: \"top-right\",\r\n    autoClose: 5000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n  });\r\n};\r\n\r\nexport const handleWarning = (msg) => {\r\n  toast.warning(msg, {\r\n    position: \"top-right\",\r\n    autoClose: 5000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n  });\r\n};\r\n"],"names":["AlertDialog","open","setOpen","title","message","onConfirm","handleClose","onClose","Header","HeaderText","IconBox","onClick","style","display","flexWrap","alignItems","Image","src","require","alt","marginBottom","autoFocus","styled","onReload","info","courseType","axios","useAxios","React","markInfo","setMarkInfo","loading","setLoading","handleChange","e","label","val","name","target","value","Number","highMark","isNaN","average","Math","ceil","total","attendance","labPerform","best","document","getElementById","getElementsByName","handleError","Dialog","Loading","DialogContent","padding","Form","onSubmit","evt","preventDefault","array","Object","entries","key","undefined","push","length","url","id","patch","then","res","status","handleSuccess","data","handleWarning","catch","err","response","sqlMessage","error","toString","InputGroup","Label","Grid2","className","SubLabel","Input","type","defaultValue","stuId","borderTopLeftRadius","borderBottomLeftRadius","onChange","required","stuName","borderTopRightRadius","borderBottomRightRadius","borderRadius","Grid","width","assign1","assign2","assign3","disabled","background","color","fontWeight","fontSize","boxShadow","test1","test2","marginLeft","ButtonGroup","Button","justifyContent","classInfo","marks","useMarksEntry","student","setStudent","getAllStudent","search","sortTable","order","window","addEventListener","classId","get","loadingImg","Table","THead","TableHead","TBody","sort","a","b","field","filter","values","toLocaleLowerCase","includes","toLowerCase","map","TableBodyRows","TableNoRecordFound","NoRecordFound","isUpdatedMark","setIsUpdatedMark","isDeleteMark","setDeleteMark","handleDeleteRecord","delete","handleOpenBox","TRow","TData","whiteSpace","textAlign","IconPanel","Icon","handleSortField","handleSort","TH","rowSpan","cursor","SortIcon","colSpan","NoDataPanel","NoRecImage","Text","students","useAddStudent","ButtonPanel","handleOpen","handleDownload","msg","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","theme"],"sourceRoot":""}